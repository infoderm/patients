name: ci:commit

on:
  push:
    branches:
      - main
  pull_request:
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:

  test:
    name: Continuous integration (test commit)
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v5
        with:
          # TODO Fetch sparingly with something similar to
          # https://github.com/rmacklin/fetch-through-merge-base/blob/main/action.yml
          # Maybe could use commit count (does not exist on merge_group
          # somehow)
          # Maybe setting .git/shallow to base first would work in all cases?
          # See https://stackoverflow.com/a/76573878
          fetch-depth: 0

      - name: Compute MERGE_BASE and HEAD_SHA 📜
        id: event
        uses: ./.github/actions/github/event

      - name: Stage MERGE_BASE...HEAD_SHA ⏮️
        env:
          HEAD_SHA: ${{ steps.event.outputs.head-sha }}
          MERGE_BASE: ${{ steps.event.outputs.merge-base }}
        run: |
          git reset --hard "${HEAD_SHA}"
          git reset --soft "${MERGE_BASE}"

      - name: Install 💾
        uses: ./.github/actions/install

      - name: Install commit hooks 🪝
        run: |
          meteor npm run install-hooks

      - name: Configure git 🪛
        env:
          SENDER_ID: ${{ github.event.sender.id }}
          SENDER_USERNAME: ${{ github.event.sender.login }}
        run: |
          git config --global user.email "${SENDER_ID}+${SENDER_USERNAME}@users.noreply.github.com"
          git config --global user.name "${SENDER_USERNAME}"

      - name: Run commit hooks 🔬
        env:
          HEAD_SHA: ${{ steps.event.outputs.head-sha }}
          MERGE_BASE: ${{ steps.event.outputs.merge-base }}
        run: |
          MERGE_BASE_SHORT="$(git rev-parse --short "${MERGE_BASE}")"
          HEAD_SHA_SHORT="$(git rev-parse --short "${HEAD_SHA}")"
          git commit -m ":construction: progress: Check commit hooks for ${MERGE_BASE_SHORT}...${HEAD_SHA_SHORT}."
